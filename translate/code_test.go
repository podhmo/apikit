package translate

import (
	"fmt"
	"io"
	"strings"
	"testing"

	"github.com/podhmo/apikit/pkg/difftest"
	"github.com/podhmo/apikit/pkg/tinypkg"
)

func TestCode(t *testing.T) {
	pkg := tinypkg.NewPackage("foo", "")

	cases := []struct {
		msg  string
		code *Code
		want string
	}{
		{
			msg: "simple",
			code: NewCode(pkg, "", func(w io.Writer) error {
				fmt.Fprintln(w, `func Hello() string { return "hello" }`)
				return nil
			}),
			want: `
// Code generated by "github.com/podhmo/apikit"; DO NOT EDIT.


package foo


func Hello() string { return "hello" }`,
		},
	}

	for _, c := range cases {
		t.Run(c.msg, func(t *testing.T) {
			var buf strings.Builder
			if err := c.code.Emit(&buf); err != nil {
				t.Fatalf("unexpected error %+v", err)
			}
			if want, got := strings.TrimSpace(c.want), strings.TrimSpace(buf.String()); want != got {
				difftest.LogDiffGotStringAndWantString(t, got, want)
			}
		})
	}
}
