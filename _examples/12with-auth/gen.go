//go:build apikit
// +build apikit

// this code is generated by "apikit init"

package main

import (
	"context"
	"m/12with-auth/action"
	"m/12with-auth/auth"
	"m/12with-auth/design"

	"github.com/podhmo/apikit/pkg/emitgo"
	"github.com/podhmo/apikit/web"
	genchi "github.com/podhmo/apikit/web/webgen/gen-chi"
)

// generate code: VERBOSE=1 go run gen.go

func main() {
	ctx := context.Background()
	emitgo.NewConfigFromRelativePath(action.Hello, "..").MustEmitWith(func(emitter *emitgo.Emitter) error {
		emitter.FilenamePrefix = "gen_" // generated file name is "gen_<name>.go"

		r := web.NewRouter()
		// todo: conflict-check
		r.Get("/hello", action.Hello)
		r.Get("/hello-with-auth", action.Hello, web.WithExtraDependencies(auth.LoginRequired), web.WithAnotherHandlerName("HelloWithAuth"))
		r.Get("/hello-with-auth-with-db", action.Hello, web.WithExtraDependencies(auth.LoginRequiredWithDB), web.WithAnotherHandlerName("HelloWithAuthWithDB"))

		c := genchi.DefaultConfig()
		g := c.New(emitter)
		return g.Generate(
			ctx,
			r,
			design.HTTPStatusOf,
		)
	})
}
